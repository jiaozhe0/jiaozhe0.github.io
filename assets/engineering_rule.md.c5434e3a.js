import{_ as e,c as r,o as t,d as a}from"./app.4b2b1220.js";const f=JSON.parse('{"title":"代码规范","description":"","frontmatter":{},"headers":[{"level":2,"title":"大厂规范参考","slug":"大厂规范参考","link":"#大厂规范参考","children":[]},{"level":2,"title":"工具篇","slug":"工具篇","link":"#工具篇","children":[{"level":3,"title":"eslint","slug":"eslint","link":"#eslint","children":[]},{"level":3,"title":"prettier","slug":"prettier","link":"#prettier","children":[]},{"level":3,"title":"husky","slug":"husky","link":"#husky","children":[]}]}],"relativePath":"engineering/rule.md"}'),i={name:"engineering/rule.md"},l=a('<h1 id="代码规范" tabindex="-1">代码规范 <a class="header-anchor" href="#代码规范" aria-hidden="true">#</a></h1><h2 id="大厂规范参考" tabindex="-1">大厂规范参考 <a class="header-anchor" href="#大厂规范参考" aria-hidden="true">#</a></h2><ul><li><a href="https://guide.aotu.io/" target="_blank" rel="noreferrer">京东凹凸实验室前端代码规范</a></li><li><a href="http://tgideas.qq.com/doc/index.html" target="_blank" rel="noreferrer">腾讯前端代码规范</a></li><li><a href="https://github.com/ecomfe/spec" target="_blank" rel="noreferrer">百度前端代码规范文档</a></li><li><a href="https://v2.cn.vuejs.org/v2/style-guide" target="_blank" rel="noreferrer">Vue 官方特有的代码风格指南</a></li></ul><h2 id="工具篇" tabindex="-1">工具篇 <a class="header-anchor" href="#工具篇" aria-hidden="true">#</a></h2><h3 id="eslint" tabindex="-1">eslint <a class="header-anchor" href="#eslint" aria-hidden="true">#</a></h3><p>在 ESLint 中，默认使用 esprima 来解析我们书写的 Javascript 语句，让其生成抽象语法树，然后去 拦截 检测是否符合我们规定的书写方式，最后让其展示报错、警告或正常通过。 ESLint 的核心就是规则（rules），而定义规则的核心就是利用 AST 来做校验。每条规则相互独立，可以设置禁用 off、警告 warn⚠️ 和报错 error❌，当然还有正常通过不用给任何提示</p><h3 id="prettier" tabindex="-1">prettier <a class="header-anchor" href="#prettier" aria-hidden="true">#</a></h3><h3 id="husky" tabindex="-1">husky <a class="header-anchor" href="#husky" aria-hidden="true">#</a></h3>',8),n=[l];function h(s,d,c,o,u,_){return t(),r("div",null,n)}const g=e(i,[["render",h]]);export{f as __pageData,g as default};
