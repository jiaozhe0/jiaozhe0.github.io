import{_ as e,c as a,o as t,d as r}from"./app.4b2b1220.js";const f=JSON.parse('{"title":"继承","description":"","frontmatter":{},"headers":[{"level":2,"title":"原型链继承","slug":"原型链继承","link":"#原型链继承","children":[]},{"level":2,"title":"经典继承","slug":"经典继承","link":"#经典继承","children":[]},{"level":2,"title":"组合继承","slug":"组合继承","link":"#组合继承","children":[]},{"level":2,"title":"寄生式继承","slug":"寄生式继承","link":"#寄生式继承","children":[]},{"level":2,"title":"寄生组合式继承","slug":"寄生组合式继承","link":"#寄生组合式继承","children":[]}],"relativePath":"js/extend.md"}'),i={name:"js/extend.md"},d=r('<h1 id="继承" tabindex="-1">继承 <a class="header-anchor" href="#继承" aria-hidden="true">#</a></h1><p>ECMA-262 把原型链定义为 ECMAScript 的主要继承方式。其基本思想就是通过原型继承多个引用类型的属性和方法。</p><h2 id="原型链继承" tabindex="-1">原型链继承 <a class="header-anchor" href="#原型链继承" aria-hidden="true">#</a></h2><h2 id="经典继承" tabindex="-1">经典继承 <a class="header-anchor" href="#经典继承" aria-hidden="true">#</a></h2><h2 id="组合继承" tabindex="-1">组合继承 <a class="header-anchor" href="#组合继承" aria-hidden="true">#</a></h2><h2 id="寄生式继承" tabindex="-1">寄生式继承 <a class="header-anchor" href="#寄生式继承" aria-hidden="true">#</a></h2><h2 id="寄生组合式继承" tabindex="-1">寄生组合式继承 <a class="header-anchor" href="#寄生组合式继承" aria-hidden="true">#</a></h2>',7),n=[d];function h(l,s,c,o,_,u){return t(),a("div",null,n)}const x=e(i,[["render",h]]);export{f as __pageData,x as default};
